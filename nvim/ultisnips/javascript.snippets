snippet cl "console.log(...)"
console.log($0);
endsnippet

snippet ct "console.trace()"
console.trace();
endsnippet

snippet isd "import from same directory"
import ${1:Component} from './$1';
endsnippet

snippet ipd "import from parent folder"
import ${1:Component} from '../$1';
endsnippet

snippet ir "import React"
import React from 'react';
endsnippet

snippet ie "import Enzyme"
import {${1:shallow}} from 'enzyme';
endsnippet

snippet im "import mobx"
import {${1:observable}} from 'mobx';
endsnippet

snippet imr "import mobx-react"
import {${1:observer}} from 'mobx-react';
endsnippet

snippet di "directory index"
// @flow
import ${1:Component} from './$1';

export default $1;
endsnippet

snippet rc "react component"
// @flow
import React from 'react';

type Props = {||};

export default class ${1:Component} extends React.Component<Props> {
    render() {
        return (
            ${2:null}
        );
    }
}
endsnippet

snippet cdm "componentDidMount"
componentDidMount() {
    $0
}
endsnippet

snippet cdu "componentDidUpdate"
componentDidUpdate(${1:prevProps: Props}) {
    $0
}
endsnippet

snippet cwu "componentWillUnmount"
componentWillUnmount() {
    $0
}
endsnippet

snippet dp "destructure props"
const {$0} = this.props;
endsnippet

snippet t "jest test"
test('${1:test description}', () => {
    $0
});
endsnippet

snippet jf "jest.fn()"
const ${1:spy} = jest.fn();
endsnippet

snippet jm "jest.mock()"
jest.mock('${1:module}', () => ${2:{}});
endsnippet
